create table GroupMember(
ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_GroupMember PRIMARY Key,
createat date,
isAdmin NUMBER DEFAULT 0,
groupid NUMBER CONSTRAINT KF_GROUP1_GroupMember REFERENCES GROUP1(ID) ON DELETE CASCADE,
USERID NUMBER CONSTRAINT KF_USER_GroupMember REFERENCES USER1(ID) ON DELETE CASCADE
);
DROP TABLE GroupMember;
CREATE OR REPLACE PACKAGE  GroupMember_PACKAGE AS

    PROCEDURE GroupMember_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_ISADMIN IN NUMBER DEFAULT 0
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL);
    
End GroupMember_PACKAGE;



CREATE OR REPLACE PACKAGE BODY GroupMember_PACKAGE AS
    
    PROCEDURE GroupMember_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_ISADMIN IN NUMBER DEFAULT 0
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL)
    IS
        group_all SYS_REFCURSOR;
    BEGIN
        IF P_ACTION = 'INSERT' THEN
            INSERT INTO GroupMember VALUES(DEFAULT,TO_Date(P_CREATEAT , 'dd-mm-yyyy'),P_ISADMIN,P_GROUPID,P_USERID); 
            COMMIT;
        ELSIF P_ACTION = 'UPDATE' THEN

            UPDATE GroupMember SET
                CREATEAT = TO_Date(P_CREATEAT , 'dd-mm-yyyy'),
                ISADMIN = P_ISADMIN,
                GROUPID = P_GROUPID,
                USERID = P_USERID
            WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'DELETE' THEN
            DELETE GroupMember WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'GETALL' THEN
            OPEN group_all FOR SELECT * FROM GroupMember;
            dbms_sql.return_result(group_all);

        ELSIF P_ACTION = 'GETBYID' THEN
            OPEN group_all FOR SELECT * FROM GroupMember WHERE ID = P_ID;
            dbms_sql.return_result(group_all);
        END IF;
    END GroupMember_CRUD;

END GroupMember_PACKAGE;

create table GroupMember(
ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_GroupMember PRIMARY Key,
createat date,
isAdmin NUMBER DEFAULT 0,
groupid NUMBER CONSTRAINT KF_GROUP1_GroupMember REFERENCES GROUP1(ID) ON DELETE CASCADE,
USERID NUMBER CONSTRAINT KF_USER_GroupMember REFERENCES USER1(ID) ON DELETE CASCADE
);
DROP TABLE GroupMember;
CREATE OR REPLACE PACKAGE  GroupMember_PACKAGE AS

    PROCEDURE GroupMember_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_ISADMIN IN NUMBER DEFAULT 0
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL);
    
End GroupMember_PACKAGE;



CREATE OR REPLACE PACKAGE BODY GroupMember_PACKAGE AS
    
    PROCEDURE GroupMember_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_ISADMIN IN NUMBER DEFAULT 0
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL)
    IS
        group_all SYS_REFCURSOR;
    BEGIN
        IF P_ACTION = 'INSERT' THEN
            INSERT INTO GroupMember VALUES(DEFAULT,TO_Date(P_CREATEAT , 'dd-mm-yyyy'),P_ISADMIN,P_GROUPID,P_USERID); 
            COMMIT;
        ELSIF P_ACTION = 'UPDATE' THEN

            UPDATE GroupMember SET
                CREATEAT = TO_Date(P_CREATEAT , 'dd-mm-yyyy'),
                ISADMIN = P_ISADMIN,
                GROUPID = P_GROUPID,
                USERID = P_USERID
            WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'DELETE' THEN
            DELETE GroupMember WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'GETALL' THEN
            OPEN group_all FOR SELECT * FROM GroupMember;
            dbms_sql.return_result(group_all);

        ELSIF P_ACTION = 'GETBYID' THEN
            OPEN group_all FOR SELECT * FROM GroupMember WHERE ID = P_ID;
            dbms_sql.return_result(group_all);
        END IF;
    END GroupMember_CRUD;

END GroupMember_PACKAGE;

