create table Message(
ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_Message PRIMARY Key,
createat date,
content1 VARCHAR2(255),
GROUPID NUMBER CONSTRAINT KF_Message_Group1 REFERENCES GROUP1(ID) ON DELETE CASCADE,
USERID NUMBER CONSTRAINT KF_Message_USER1 REFERENCES USER1(ID) ON DELETE CASCADE
);

CREATE OR REPLACE PACKAGE  Message_PACKAGE AS

    PROCEDURE Message_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_createat IN DATE DEFAULT NULL
    ,P_content1 IN Varchar DEFAULT null
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL);
    
End Message_PACKAGE;



CREATE OR REPLACE PACKAGE BODY Message_PACKAGE AS
    
     PROCEDURE Message_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_createat IN DATE DEFAULT NULL
    ,P_content1 IN Varchar DEFAULT null
    ,P_GROUPID IN NUMBER DEFAULT NULL
    ,P_USERID IN NUMBER DEFAULT NULL)
    IS
        message_all SYS_REFCURSOR;
    BEGIN
        IF P_ACTION = 'INSERT' THEN
            INSERT INTO Message VALUES(DEFAULT,TO_Date(P_CREATEAT , 'dd-mm-yyyy'),P_content1,P_GROUPID,P_USERID); 
            COMMIT;
        ELSIF P_ACTION = 'UPDATE' THEN

            UPDATE Message SET
                CREATEAT = TO_Date(P_CREATEAT , 'dd-mm-yyyy'),
                CONTENT1 = P_content1,
                GROUPID =P_GROUPID,
                USERID = P_USERID
            WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'DELETE' THEN
            DELETE Message WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'GETALL' THEN
            OPEN message_all FOR SELECT * FROM Message;
            dbms_sql.return_result(message_all);

        ELSIF P_ACTION = 'GETBYID' THEN
            OPEN message_all FOR SELECT * FROM Message WHERE ID = P_ID;
            dbms_sql.return_result(message_all);
        END IF;
    END Message_CRUD;

END Message_PACKAGE;