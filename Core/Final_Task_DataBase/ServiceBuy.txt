create table ServiceBuy(
ID NUMBER GENERATED BY DEFAULT AS IDENTITY CONSTRAINT PK_ServiceBuy PRIMARY Key,
name varchar2(255),
price number,
createat date,
cate_id number Constraint FK_ServiceBuy_category REFERENCES CATEGORY(ID) on DElete CASCADE
);

CREATE OR REPLACE PACKAGE  ServiceBuy_PACKAGE AS

    PROCEDURE ServiceBuy_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_NAME IN VARCHAR DEFAULT NULL
    ,P_PRICE IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_CATE_ID IN NUMBER DEFAULT NULL);
    
End ServiceBuy_PACKAGE;



CREATE OR REPLACE PACKAGE BODY ServiceBuy_PACKAGE AS
    
    PROCEDURE ServiceBuy_CRUD(P_ACTION in varchar DEFAULT NULL 
    ,P_ID IN NUMBER DEFAULT NULL
    ,P_NAME IN VARCHAR DEFAULT NULL
    ,P_PRICE IN NUMBER DEFAULT NULL
    ,P_CREATEAT IN DATE DEFAULT NULL
    ,P_CATE_ID IN NUMBER DEFAULT NULL)
    IS
        serve_all SYS_REFCURSOR;
    BEGIN
        IF P_ACTION = 'INSERT' THEN
            INSERT INTO ServiceBuy VALUES(DEFAULT,P_NAME,P_PRICE,TO_Date(P_CREATEAT , 'dd-mm-yyyy'),P_CATE_ID); 
            COMMIT;
        ELSIF P_ACTION = 'UPDATE' THEN

            UPDATE ServiceBuy SET
                NAME = P_NAME , PRICE = P_PRICE,
                CREATEAT = TO_Date(P_CREATEAT , 'dd-mm-yyyy'),
                CATE_ID = P_CATE_ID
            WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'DELETE' THEN
            DELETE ServiceBuy WHERE ID = P_ID;
            COMMIT;

        ELSIF P_ACTION = 'GETALL' THEN
            OPEN serve_all FOR SELECT * FROM ServiceBuy;
            dbms_sql.return_result(serve_all);

        ELSIF P_ACTION = 'GETBYID' THEN
            OPEN serve_all FOR SELECT * FROM ServiceBuy WHERE ID = P_ID;
            dbms_sql.return_result(serve_all);
        ELSIF P_ACTION = 'GETBYNAME' THEN
            OPEN serve_all FOR SELECT * FROM ServiceBuy WHERE NAME = P_NAME;
            dbms_sql.return_result(serve_all);
        END IF;
    END ServiceBuy_CRUD;

END ServiceBuy_PACKAGE;